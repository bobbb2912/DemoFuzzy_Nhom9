/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Hien PC
 */
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

public class MainForm extends javax.swing.JFrame {

    int width, height;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblEncryptImage = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lblDecryptImage = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblOriginalImage = new javax.swing.JLabel();
        btnBrowse = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Demo Fuzzy Nhom 9 ~v~");
        setBackground(new java.awt.Color(255, 204, 204));

        lblEncryptImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEncryptImage, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEncryptImage, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblDecryptImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDecryptImage, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDecryptImage, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addContainerGap())
        );

        lblOriginalImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOriginalImage, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblOriginalImage, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnBrowse.setText("Chọn File");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Hình ảnh sau khi mã hóa");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Hình ảnh sau khi giải mã");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(btnBrowse)
                        .addGap(145, 145, 145)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBrowse)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("Hình ảnh", "jpg", "png");
        chooser.setFileFilter(imageFilter);
        chooser.setMultiSelectionEnabled(false); //chi cho phep chon 1 file

        int x = chooser.showDialog(this, "Chọn File");
        if (x == JFileChooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            try {
                BufferedImage image = ImageIO.read(f);
                BufferedImage image_encrypt = ImageIO.read(f);
                width = image.getWidth();
                height = image.getHeight();

                System.out.println("Width = " + width + " Height = " + height);
                // chuyen hinh anh thanh mot mang cac byte;
//                byte[] byteImage = ImageHelper.toByteArray(image);

                // hien thi original image len form
                ImageIcon icon = new ImageIcon(f.getPath());
                Image img = ImageHelper.resize(icon.getImage(), 339,386); // resize
                ImageIcon resizedIcon = new ImageIcon(img);
                lblOriginalImage.setIcon(resizedIcon);

                //TAO SO NGUYEN TO NGAY NHIEN TRONG KHOANG 1-256
                int A[] = {233, 113, 211, 173, 251, 79, 181};
                int k = 234;
   
                // MA HOA TUNG 7 BIT BANG BAY KHOA
                int a = 0;
                int cipherBit[][] = new int[width][height];
                for (int i = 0; i < width; i++) {
                    for (int j = 0; j < height; j++) {
                        if (a < 7) {
                            image_encrypt.setRGB(i, j, (int) (((image.getRGB(i, j)*A[a])+k)% 256));
                            if (image_encrypt.getRGB(i, j) < 0) {
                                image_encrypt.setRGB(i, j,(int)(image_encrypt.getRGB(i, j)+ 256)) ;
                            }
                            a++;
                        } else {
                            a = 0;
                            image_encrypt.setRGB(i, j, (int) (((image.getRGB(i, j)*A[a])+k)% 256));
                            if (image_encrypt.getRGB(i, j) < 0) {
                                image_encrypt.setRGB(i, j,(int)(image_encrypt.getRGB(i, j)+ 256)) ;
                            }
                            a++;
                        }
                    }
                }

                System.out.println("Done 7 bit");
                ////
//                for (int i = 0; i < width; i++) {
//                    for (int j = 0; j < height; j++) {
//                        System.out.print(cipherBit[i][j] + " ");
//                    }
//                    System.out.println("");
//                }

                // DI CHUYEN HANG THANH COT CHO TUNG KHOI 4X4
                int hoanvi[][] = new int[width][height];
                int i = 0, j = 0;
                 
                while (i < (width - (width % 4))) {
                    while (j < (height - (height % 4))) {
                        for (int x1 = 0; x1 < 4 && (x1+i+4) <(width - (width % 4)) ; x1++) {
                            for (int y1 = j; y1 < j + 4 && (y1+4) < (height - (height % 4)); y1++) {
                                hoanvi[x1+i][y1] = image_encrypt.getRGB(y1+i-j, x1+j);
                                image.setRGB(x1+i, y1, hoanvi[x1+i][y1]);
                            }
                        }
                        j += 4;
                    }
                    i += 4;
                    j = 0;
                }

                System.out.println("done thay the1");

//                // XOR HAI BIT LIEN KE TU DUOI LEN THEO CHIEU DOC
                int w = width-1;
                int xorBit[][] = new int[width][height];
                while (w >= 0) {
                    for (int i1 = height - 1; i1 >= 0; i1--) {

                        if (i1 - 1 >= 0 && w >= 0) {
                            xorBit[w][i1] = (int) (((image_encrypt.getRGB(w, i1) ^ image_encrypt.getRGB(w, i1-1)) ^ (int)(256)) );
//                             
//                            int a1 = (xorBit[w][i1] >> 24) & 0xff;
//                            int r = (xorBit[w][i1] >> 16) & 0xff;
//                            int g = (xorBit[w][i1] >> 8) & 0xff;
//                            int b = xorBit[w][i1] & 0xff;
//
//                            int avg = (r + g + b) / 3;
//
//                            int p = (a1 << 24) | (avg << 16) | (avg << 8)| avg;
                            image_encrypt.setRGB(w, i1, xorBit[w][i1]);
                        }

                    }
                    w--;
                }

                System.out.println("Done xor bit");
////

                ImageIcon icon1 = new ImageIcon(image_encrypt);
                System.out.println("done1");
                Image img1 = ImageHelper.resize(icon1.getImage(), 339,386);
                System.out.println("done12");
                ImageIcon resizedIcon1 = new ImageIcon(img1);
                System.out.println("done13");
                lblEncryptImage.setIcon(resizedIcon1);
                System.out.println("done14");
////                
                File outputfile = new File("EncryptedImage.jpg");
                ImageIO.write(image_encrypt, "jpg", outputfile);
                
///////////////////////////////////////////Decrypt//////////////////////////////////////////////////////////////////////////////////

                BufferedImage image_decrypt = ImageIO.read(new File("D:\\BaiTapLon_ATCSDL_Nhom9\\DemoFuzzy_Nhom9\\EncryptedImage.jpg"));
//                // XOR 2 BIT LIEN KE TU DAU HINH ANH THEO CHIEU DOC
                int w1 = width-1;
                int xorBit_decrypt[][] = new int[width][height];
                
//                for (int i1 = 0; i1 < width; i1++) {
//                    xorBit_decrypt[i1][0] = image_decrypt.getRGB(i1, 0);
//                    image_decrypt.setRGB(i1, 0, xorBit_decrypt[i1][0]);
//                }
                while (w1 >= 0) {
                    for (int i1 = 1; i1 < height; i1++) {

                        if (i1 < height && w1 >= 0) {
                            xorBit_decrypt[w1][i1] = (int) (((image_encrypt.getRGB(w1, i1-1)) ^ image_decrypt.getRGB(w1, i1)) ^ (int)(256));
                            image_decrypt.setRGB(w1, i1, xorBit_decrypt[w1][i1]);
                        }

                    }
                    w1--;
                }

                ////////////chia hinh anh thanh cac khoi 4x4, trao doi giua hang va cot
                int hoanvi_decrypt[][] = new int[width][height];
                int u = 0, v = 0;
                while (u < (width - (width % 4))) {
                    while (v < (height - (height % 4))) {
                        for (int x1 = 0; x1 < 4 && (x1+u+4) <(width - (width % 4)) ; x1++) {
                            for (int y1 = v; y1 < v + 4 && (y1+4) < (height - (height % 4)); y1++) {
                                hoanvi_decrypt[x1+u][y1] = image_encrypt.getRGB(y1+u-v, x1+v);
                                image_decrypt.setRGB(x1+u, y1, hoanvi[x1+u][y1]);
                            }
                        }
                        v += 4;
                    }
                    u += 4;
                    v = 0;
                }
                System.out.println("done thay the2");

////                // MA HOA TUNG 7 BIT CUA KHOI
                int A1[] = {89, 145, 91, 37, 51, 175, 157}; // lay nghich dao cho tung phan tu trong mang A
                int a1 = 0;
                int cipherBit_Decrypt[][] = new int[width][height];
                for (int i1 = 0; i1 < width; i1++) {
                    for (int j1 = 0; j1 < height; j1++) {
                        if (a1 < 7) {
                            image_decrypt.setRGB(i1, j1, (int) (((image_decrypt.getRGB(i1, j1)-k)*A1[a1])% 256));
                            if (image_decrypt.getRGB(i1, j1) < 0) {
                                image_decrypt.setRGB(i1, j1, (int) ((image_decrypt.getRGB(i1, j1)+ 256)));
                            }
                            a1++;
                        } else {
                            a1 = 0;
                            image_decrypt.setRGB(i1, j1, (int) (((image_decrypt.getRGB(i1, j1)-k)*A1[a1])% 256));
                            if (image_decrypt.getRGB(i1, j1) < 0) {
                                image_decrypt.setRGB(i1, j1, (int) ((image_decrypt.getRGB(i1, j1)+ 256)));
                            }
                            a1++;
                        }
                    }
                }

//
//                System.out.println("Done 7bit");
//                //////////
                ImageIcon icon2 = new ImageIcon(image_decrypt);
                System.out.println("done1");
                Image img2 = ImageHelper.resize(icon2.getImage(), 339,386);
                System.out.println("done12");
                ImageIcon resizedIcon2 = new ImageIcon(img2);
                System.out.println("done13");
                lblDecryptImage.setIcon(resizedIcon2);
                System.out.println("done14");
//                
                File outputfile1 = new File("DecryptedImage.jpg");
                ImageIO.write(image_decrypt, "jpg", outputfile1);
            } catch (IOException ex) {
                ex.printStackTrace();
                System.out.println("ulatr lai loi a-.-");
            }

        }
    }//GEN-LAST:event_btnBrowseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrowse;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblDecryptImage;
    private javax.swing.JLabel lblEncryptImage;
    private javax.swing.JLabel lblOriginalImage;
    // End of variables declaration//GEN-END:variables
}
